buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'
    copyIdeResources = true
    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'


            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {

    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"

}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        forRepositories(fg.repository) // Only add this if you're using ForgeGradle, otherwise remove this line
        filter {
            includeGroup "maven.modrinth"
        }
    }

}

dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("maven.modrinth:alexs-mobs:1.22.9")
    implementation fg.deobf("maven.modrinth:citadel:2.6.0")
    implementation fg.deobf("maven.modrinth:alexs-caves:2.0.2")
    implementation fg.deobf("maven.modrinth:soul-fire-d:FJstly9L")
    implementation fg.deobf("maven.modrinth:biomes-o-plenty:19.0.0.91")
    implementation fg.deobf("maven.modrinth:curios:5.11.0+1.20.1")
    implementation fg.deobf("maven.modrinth:curious-lanterns:1.20.1-1.3.3")

    runtimeOnly fg.deobf("maven.modrinth:farmers-delight:1.20.1-1.2.7")
    runtimeOnly fg.deobf("maven.modrinth:debugutils:Tr2n6OzX")
    runtimeOnly fg.deobf("maven.modrinth:better-advancements:NS5G3ENg")
    runtimeOnly fg.deobf("maven.modrinth:radiant-gear:2.1.5+1.20.1")
    runtimeOnly fg.deobf("maven.modrinth:glitchcore:0.0.1.1")
    runtimeOnly fg.deobf("maven.modrinth:cobweb:RdRlnl4S")
    runtimeOnly fg.deobf("maven.modrinth:terrablender:3.0.1.7")
    runtimeOnly fg.deobf("maven.modrinth:jade:11.7.1")
    runtimeOnly fg.deobf("maven.modrinth:bookshelf-lib:20.2.13")
    runtimeOnly fg.deobf("maven.modrinth:enchantment-descriptions:H9lpjTvf")
    //runtimeOnly fg.deobf("maven.modrinth:nbt-autocomplete:36dElHpR")
    runtimeOnly fg.deobf("maven.modrinth:jei:PeYsGsQy")
    runtimeOnly fg.deobf("maven.modrinth:collective:1.20.1-7.87-fabric+forge+neo")
    runtimeOnly fg.deobf("maven.modrinth:superflat-world-no-slimes:1.20.1-3.4-fabric+forge+neo")


    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.5.0-beta.5"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.5.0-beta.5")) {
        jarJar.ranged(it, "[0.5.0-beta.5,)")
    }




    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
